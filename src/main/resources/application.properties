spring.datasource.url=jdbc:mysql://localhost:3306/users_managements
spring.datasource.username=root
spring.datasource.password=

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

# by default Exposing 1 endpoint(s) beneath base path '/actuator' , so we can enable all actuator endpoint in this properties
# after added this property => Exposing 13 endpoint(s) beneath base path '/actuator'
# http://localhost:8080/actuator
management.endpoints.web.exposure.include=*
# enable the info to show this info
# http://localhost:8080/actuator/info
management.info.env.enabled=true
info.app.name=Spring Boot Restfull Web Service actuator
info.app.description=Spring Boot Restfull Web Services Actuator Demo
info.app.version=1.0.0

# http://localhost:8080/actuator/health => health of app including the disk space, databases and more
# by default actuator displays only the status of the app
# this property will be able to show all details of health endpoint => this property by default is --> never
management.endpoint.health.show-details=always

# http://localhost:8080/actuator/beans => beans endpoint shows all the beans registered in the app
# we can able to see all the spring beans that registered in application context
# for example you visualize : dependencies, resources, type and scope.... (UserRepository, UserController)
# By default, the scope of the spring bean is singleton

# http://localhost:8080/actuator/conditions
# => conditions endpoint shows the autoconfiguration report, categorised into positiveMatches and negativeMatches
## positive matches => you can able to see all those auto configuration beans that are matched by @Conditional annotation
# spring boot basically automatically configure this spring beans whenever it will find jar dependencies
## in a class path and all those spring auto configuration beans that are managed using @Conditional annotation
## are present under positive matches
# Under negative matches you can able to see all spring auto configuration beans that are not matched by @Conditional annotation
## the beans that haven't added to the project

# http://localhost:8080/actuator/mappings
# mappings endpoint shows all the @RequestMapping paths declared in the app
# this is very helpful for checking which request path will be handled by which controller method

# http://localhost:8080/actuator/configprops
# configprops endpoint offers all the configuration properties defined by @ConfigurationProperties bean
## including your configuration properties defined in the application.properties or YAML files

# http://localhost:8080/actuator/metrics
# metrics endpoint shows various metrics about the current app such as how much memory it is using,
## how much memory is free, the size of the heap used, the number of threads used, and so on.
# http://localhost:8080/actuator/executor.pool.max
# http://localhost:8080/actuator/jvm.memory.max
# http://localhost:8080/actuator/disk.total
# localhost:8080/actuator/metrics/jdbc.connections.max
# ..................